{"name":"LaserPulse","tagline":"A Matlab class for simulations in nonlinear and ultrafast optics.","body":"#LaserPulse\r\n\r\nLaserPulse is a Matlab class for streamlining\r\nsimulations in nonlinear and ultrafast optics. It allows to store pulses\r\nin a convenient way, analyze them and perform simple mathematical\r\noperations.\r\n\r\n##### Functionalities:\r\n * **Automatic Fourier Transform:**\r\n   When a pulse is modified in time domain the spectral field is\r\n   automatically updated using fft, and vice versa.\r\n * **Physical Quantities:**\r\n   Pulse duration, bandwidth, central frequency, and other properties \r\n   of the pulse are automatically calculated.\r\n * **Mathematical Operators:**\r\n   The LaserPulse class supports arithmetic operations, convolutions\r\n   and calculation of higher harmonics. By default the operators are\r\n   applied in time domain, so for instance p1*p2 is a multiplication\r\n   in time domain and a convolution in frequency domain. See the\r\n   example files for more information.\r\n * **Pulse Trains:**\r\n   A LaserPulse object can contain multiple sub-pulses. Pulse\r\n   parameters, like central frequency and bandwidth, are calculated\r\n   from the average pulse intensity, as they would be measured using a\r\n   slow detector. This functionality can be useful for simulating\r\n   pulse trains generated by high repetition rate laser sources, for\r\n   which the individual pulses often cannot be measured individually.\r\n\r\n\r\n##### Documentation:\r\n   A concise [user guide](./manual/laserpulse_overview.html) with example code can be found [here](./manual/laserpulse_overview.html).\r\n","google":"A-71214277-1","note":"Don't delete this file! It's used internally to help with page regeneration."}