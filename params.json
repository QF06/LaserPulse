{"name":"LaserPulse","tagline":"A Matlab class for simulations in nonlinear and ultrafast optics.","body":"#LaserPulse\r\n\r\nLaserPulse is a Matlab class for streamlining\r\nsimulations in nonlinear and ultrafast optics. It allows to store pulses\r\nin a convenient way, analyze them and perform simple mathematical\r\noperations.\r\n\r\n#####Functionalities:\r\n * **Automatic Fourier Transform:**\r\n   When a pulse is modified in time domain the spectral field is\r\n   automatically updated using fft, and vice versa.\r\n * **Physical Quantities:**\r\n   Pulse duration, bandwidth, central frequency, and other properties \r\n   of the pulse are automatically calculated.\r\n * **Mathematical Operators:**\r\n   The LaserPulse class supports arithmetic operations, convolutions\r\n   and calculation of higher harmonics. By default the operators are\r\n   applied in time domain, so for instance p1*p2 is a multiplication\r\n   in time domain and a convolution in frequency domain. See the\r\n   example files for more information.\r\n * **Pulse Trains:**\r\n   A LaserPulse object can contain multiple sub-pulses. Pulse\r\n   parameters, like central frequency and bandwidth, are calculated\r\n   from the average pulse intensity, as they would be measured using a\r\n   slow detector. This functionality can be useful for simulating\r\n   pulse trains generated by high repetition rate laser sources, for\r\n   which the individual pulses often cannot be measured individually.\r\n\r\n\r\n#####Requirements:\r\n   The LaserPulse class was tested on Matlab2015a, but it should work\r\n   with Matlab version R2011a or more recent.\r\n\r\n#####Installation:\r\n * Automatic Installation:\r\n   From matlab: go to the folder where the LaserPulse is located (for\r\n   example 'cd LaserPulseClass') and run the installer script\r\n   'install_LaserPulse.m'.\r\n * Manual Installation:\r\n   For installing the **LaserPulse** class, just include its parent\r\n   folder in the matlab search path or, alternatively, copy the\r\n   '@LaserPulse' folder in a folder which is in the matlab search\r\n   path.  For using the additional utilities and example files, also\r\n   add the 'utilities' and 'examples' folders to the matlab search\r\n   path.  If the folder with the LaserPulse manual is not present,\r\n   generate it using the matlab 'publish' function. See\r\n   'install_LaserPulse.m' for an example.\r\n\r\n\r\n\r\n#####Copyright:\r\n\r\nCopyright (C) 2015 Alberto Comin, LMU Muenchen.\r\n\r\nLaserPulse is free software: you can redistribute it and/or modify it\r\nunder the terms of the GNU General Public License as published by the\r\nFree Software Foundation, either version 3 of the License, or (at your\r\noption) any later version. LaserPulse is distributed in the hope that\r\nit will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\nwarranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See\r\nthe GNU General Public License for more details. You should have\r\nreceived a copy of the GNU General Public License along with\r\nLaserPulse.  If not, see <http://www.gnu.org/licenses/>.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
